# Load Packages
library(pacman)
p_load(tidyverse, readr, janitor, broom, tidymodels)
# Load Data
# Load Packages
library(pacman)
p_load(tidyverse, readr, janitor, broom, tidymodels)
# Load Data
train <- read_csv("data/train.csv")
test <- read_csv("data/test.csv")
# Load Packages
library(pacman)
p_load(tidyverse, readr, janitor, broom, tidymodels)
# Load Data
train <- read_csv("data/train.csv")
test <- read_csv("data/test.csv")
# Clean Data
train <- clean_names(train, case = 'big_camel')
test <- clean_names(test, case = 'big_camel')
train <- train %>% mutate(across(where(is.character), as.factor))
test <- test %>% mutate(across(where(is.character), as.factor))
rec_1 <- recipe(SalePrice ~ . , data = train)
# Create first model
rec_1 <- recipe(SalePrice ~ . , data = train)
proc_1 <- rec_1 %>%
# Mean imputation for numeric predictors
step_meanimpute(all_predictors() & all_numeric()) %>%
# KNN imputation for categorical predictors
step_knnimpute(all_predictors() & all_nominal(), neighbors = 5) %>%
# Create dummies for categorical variables
step_dummy(all_predictors() & all_nominal())
# Create first model
rec_1 <- recipe(SalePrice ~ . , data = train)
proc_1 <- rec_1 %>%
# Mean imputation for numeric predictors
step_impute_mean(all_predictors() & all_numeric()) %>%
# KNN imputation for categorical predictors
step_impute_knn(all_predictors() & all_nominal(), neighbors = 5) %>%
# Create dummies for categorical variables
step_dummy(all_predictors() & all_nominal())
reg_1 <- linear_reg() %>%
set_engine("lm") %>%
fit(SalePrice ~. , data = train)
train_1 <- proc_1 %>% prep() %>% juice()
reg_1 <- linear_reg() %>%
set_engine("lm") %>%
fit(SalePrice ~. , data = train)
reg_1 <- linear_reg() %>%
set_engine("lm") %>%
fit(SalePrice ~. , data = train_1)
# Predict
test_1 <- test %>%
mutate(SalePrice = predict(reg_1, new_data = test_1))
# Predict
test_1 <- test %>%
mutate(SalePrice = predict(reg_1, new_data = test))
test_1 <- bake(proc_1, new_data = test)
# Create first model
# Create Recipe
rec_1 <- recipe(SalePrice ~ . , data = train)
# Define Processing Steps
proc_1 <- rec_1 %>%
# Mean imputation for numeric predictors
step_impute_mean(all_predictors() & all_numeric()) %>%
# KNN imputation for categorical predictors
step_impute_knn(all_predictors() & all_nominal(), neighbors = 5) %>%
# Create dummies for categorical variables
step_dummy(all_predictors() & all_nominal()) %>%
prep()
# Apply processing to data
train_1 <- proc_1 %>% juice()
test_1 <- bake(proc_1, new_data = test)
# Create first model
# Create Recipe
rec_1 <- recipe(SalePrice ~ . , data = train)
# Define Processing Steps
proc_1 <- rec_1 %>%
# Mean imputation for numeric predictors
step_impute_mean(all_predictors() & all_numeric()) %>%
# KNN imputation for categorical predictors
step_impute_knn(all_predictors() & all_nominal(), neighbors = 5) %>%
# Create dummies for categorical variables
step_dummy(all_predictors() & all_nominal()) %>%
step_impute_mode(all_nominal_predictors()) %>%
prep()
# Apply processing to data
train_1 <- proc_1 %>% juice()
test_1 <- bake(proc_1, new_data = test)
# Load Packages
library(pacman)
p_load(tidyverse, readr, janitor, broom, tidymodels)
# Load Data
train <- read_csv("data/train.csv")
test <- read_csv("data/test.csv")
# Clean Data
train <- clean_names(train, case = 'big_camel')
test <- clean_names(test, case = 'big_camel')
train <- train %>% mutate(across(where(is.character), as.factor))
test <- test %>% mutate(across(where(is.character), as.factor))
# Create first model
# Create Recipe
rec_1 <- recipe(SalePrice ~ . , data = train)
# Define Processing Steps
proc_1 <- rec_1 %>%
# Mean imputation for numeric predictors
step_impute_mean(all_predictors() & all_numeric()) %>%
# KNN imputation for categorical predictors
step_impute_knn(all_predictors() & all_nominal(), neighbors = 5) %>%
# Create dummies for categorical variables
step_dummy(all_predictors() & all_nominal()) %>%
step_impute_mode(all_nominal_predictors()) %>%
prep()
# Apply processing to data
train_1 <- proc_1 %>% juice()
test_1 <- bake(proc_1, new_data = test)
# Create first model
# Create Recipe
rec_1 <- recipe(SalePrice ~ . , data = train)
# Define Processing Steps
proc_1 <- rec_1 %>%
# Mean imputation for numeric predictors
step_impute_mean(all_predictors() & all_numeric()) %>%
# KNN imputation for categorical predictors
step_impute_knn(all_predictors() & all_nominal(), neighbors = 5) %>%
# Create dummies for categorical variables
step_dummy(all_predictors() & all_nominal()) %>%
step_impute_mean(all_numeric_predictors()) %>%
step_impute_mode(all_nominal_predictors()) %>%
prep()
# Apply processing to data
train_1 <- proc_1 %>% juice()
test_1 <- bake(proc_1, new_data = test)
?sample
cv_sample <- sample(1:5, nrow(train))
# Load Packages
library(pacman)
p_load(tidyverse, readr, janitor, broom, tidymodels, magrittr, kknn)
# Load Data
train <- read_csv("data/train.csv")
test <- read_csv("data/test.csv")
# Clean Data
train <- clean_names(train, case = 'big_camel')
test <- clean_names(test, case = 'big_camel')
train <- train %>% mutate(across(where(is.character), as.factor))
test <- test %>% mutate(across(where(is.character), as.factor))
test %<>% mutate(SalePrice = NA)
# Create first model
# Create Recipe
#setdiff(names(test), names(train))
rec_1 <- recipe(SalePrice ~ ., data = train)
# Load Packages
library(pacman)
p_load(tidyverse, readr, janitor, broom, tidymodels, magrittr, kknn)
# Load Data
train <- read_csv("data/train.csv")
test <- read_csv("data/test.csv")
# Clean Data
train <- clean_names(train, case = 'big_camel')
test <- clean_names(test, case = 'big_camel')
train <- train %>% mutate(across(where(is.character), as.factor))
test <- test %>% mutate(across(where(is.character), as.factor))
test %<>% mutate(SalePrice = NA)
# Create first model
# Create Recipe
#setdiff(names(test), names(train))
rec_1 <- recipe(SalePrice ~ ., data = train)
# Create first model
# Create Recipe
#setdiff(names(test), names(train))
library(tidymodels)
p_load(tidyverse, readr, janitor, broom, tidymodels, magrittr, kknn)
# Create first model
# Create Recipe
#setdiff(names(test), names(train))
library(tidymodels)
# Load Packages
library(pacman)
p_load(tidyverse, readr, janitor, broom, tidymodels, magrittr, kknn)
# Load Data
train <- read_csv("data/train.csv")
test <- read_csv("data/test.csv")
# Clean Data
train <- clean_names(train, case = 'big_camel')
test <- clean_names(test, case = 'big_camel')
train <- train %>% mutate(across(where(is.character), as.factor))
test <- test %>% mutate(across(where(is.character), as.factor))
test %<>% mutate(SalePrice = NA)
# Create first model
# Create Recipe
#setdiff(names(test), names(train))
library(tidymodels)
# Create first model
# Create Recipe
#setdiff(names(test), names(train))
rec_1 <- recipe(SalePrice ~ ., data = train)
p_load(tidyverse, readr, janitor, broom, tidymodels, magrittr, kknn, recipes)
# Create first model
# Create Recipe
#setdiff(names(test), names(train))
rec_1 <- recipe(SalePrice ~ ., data = train)
install.packages(tidymodels)
install.packages("tidymodels")
# Create first model
# Create Recipe
#setdiff(names(test), names(train))
rec_1 <- recipe(SalePrice ~ ., data = train)
# Load Packages
library(pacman)
p_load(tidyverse, readr, janitor, broom, tidymodels, magrittr, kknn, recipes)
# Load Data
train <- read_csv("data/train.csv")
test <- read_csv("data/test.csv")
# Clean Data
train <- clean_names(train, case = 'big_camel')
test <- clean_names(test, case = 'big_camel')
train <- train %>% mutate(across(where(is.character), as.factor))
test <- test %>% mutate(across(where(is.character), as.factor))
test %<>% mutate(SalePrice = NA)
# Create first model
# Create Recipe
#setdiff(names(test), names(train))
rec_1 <- recipe(SalePrice ~ ., data = train)
library(tidymodels)
install.packages("rlang")
install.packages("rlang")
# Load Packages
library(pacman)
p_load(tidyverse, readr, janitor, broom, tidymodels, magrittr, kknn, recipes)
library(tidymodels)
# Create first model
# Create Recipe
#setdiff(names(test), names(train))
rec_1 <- recipe(SalePrice ~ ., data = train)
# Load Packages
library(pacman)
p_load(tidyverse, readr, janitor, broom, tidymodels, magrittr, kknn, recipes)
library(tidymodels)
install.packages("rlang")
library(tidymodels)
install.packages("cli")
install.packages("cli")
library(tidymodels)
install.packages("cli")
library(tidymodels)
install.packages("dials")
library(tidymodels)
# Load Data
train <- read_csv("data/train.csv")
p_load(tidyverse, readr, janitor, broom, tidymodels, magrittr, kknn, recipes)
# Load Packages
library(pacman)
p_load(tidyverse, readr, janitor, broom, tidymodels, magrittr, kknn, recipes)
library(tidymodels)
install.packages("dials")
library(tidymodels)
install.packages("dials")
install.packages("tidymodels", dependencies = TRUE)
library(tidymodels)
install.packages("Rtools")
install.packages("tidymodels", dependencies = TRUE)
library(tidymodels)
# Create first model
# Create Recipe
#setdiff(names(test), names(train))
rec_1 <- recipe(SalePrice ~ ., data = train)
# Load Packages
library(pacman)
p_load(tidyverse, readr, janitor, broom, tidymodels, magrittr, kknn, recipes)
library(tidymodels)
